<?php
/**
 * FbyApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * FbyApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class FbyApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addHiddenOffers_0
     *
     * Скрытие товаров и настройки скрытия.
     *
     */
    public function testAddHiddenOffers0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addOffersToArchive_1
     *
     * Добавление товаров в архив.
     *
     */
    public function testAddOffersToArchive1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for calculateTariffs_1
     *
     * Калькулятор стоимости услуг.
     *
     */
    public function testCalculateTariffs1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for confirmBusinessPrices_1
     *
     * Удаление товара из карантина по цене в кабинете.
     *
     */
    public function testConfirmBusinessPrices1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for confirmCampaignPrices_1
     *
     * Удаление товара из карантина по цене в магазине.
     *
     */
    public function testConfirmCampaignPrices1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createChat_2
     *
     * Создание нового чата с покупателем.
     *
     */
    public function testCreateChat2()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteCampaignOffers_1
     *
     * Удаление товаров из ассортимента магазина.
     *
     */
    public function testDeleteCampaignOffers1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteGoodsFeedbackComment_0
     *
     * Удаление комментария к отзыву.
     *
     */
    public function testDeleteGoodsFeedbackComment0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteHiddenOffers_0
     *
     * Возобновление показа товаров.
     *
     */
    public function testDeleteHiddenOffers0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOffersFromArchive_1
     *
     * Удаление товаров из архива.
     *
     */
    public function testDeleteOffersFromArchive1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOffers_1
     *
     * Удаление товаров из каталога.
     *
     */
    public function testDeleteOffers1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deletePromoOffers_0
     *
     * Удаление товаров из акции.
     *
     */
    public function testDeletePromoOffers0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generateBoostConsolidatedReport_0
     *
     * Отчет по бусту продаж.
     *
     */
    public function testGenerateBoostConsolidatedReport0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generateCompetitorsPositionReport_0
     *
     * Отчет «Конкурентная позиция».
     *
     */
    public function testGenerateCompetitorsPositionReport0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generateGoodsFeedbackReport_0
     *
     * Отчет по отзывам о товарах.
     *
     */
    public function testGenerateGoodsFeedbackReport0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generateGoodsMovementReport_0
     *
     * Отчет по движению товаров.
     *
     */
    public function testGenerateGoodsMovementReport0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generateGoodsRealizationReport_0
     *
     * Отчет по реализации.
     *
     */
    public function testGenerateGoodsRealizationReport0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generateGoodsTurnoverReport_0
     *
     * Отчет по оборачиваемости.
     *
     */
    public function testGenerateGoodsTurnoverReport0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generatePricesReport_0
     *
     * Отчет «Цены на рынке».
     *
     */
    public function testGeneratePricesReport0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generateShelfsStatisticsReport_0
     *
     * Отчет по полкам.
     *
     */
    public function testGenerateShelfsStatisticsReport0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generateShowsSalesReport_0
     *
     * Отчет «Аналитика продаж».
     *
     */
    public function testGenerateShowsSalesReport0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generateStocksOnWarehousesReport_0
     *
     * Отчет по остаткам на складах.
     *
     */
    public function testGenerateStocksOnWarehousesReport0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generateUnitedMarketplaceServicesReport_0
     *
     * Отчет по стоимости услуг.
     *
     */
    public function testGenerateUnitedMarketplaceServicesReport0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generateUnitedNettingReport_0
     *
     * Отчет по платежам.
     *
     */
    public function testGenerateUnitedNettingReport0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generateUnitedOrdersReport_0
     *
     * Отчет по заказам.
     *
     */
    public function testGenerateUnitedOrdersReport0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAllOffers_3
     *
     * Все предложения магазина.
     *
     */
    public function testGetAllOffers3()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getBidsInfoForBusiness_2
     *
     * Информация об установленных ставках.
     *
     */
    public function testGetBidsInfoForBusiness2()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getBidsRecommendations_2
     *
     * Рекомендованные ставки для заданных товаров.
     *
     */
    public function testGetBidsRecommendations2()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getBusinessQuarantineOffers_1
     *
     * Список товаров, находящихся в карантине по цене в кабинете.
     *
     */
    public function testGetBusinessQuarantineOffers1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getBusinessSettings_2
     *
     * Настройки кабинета.
     *
     */
    public function testGetBusinessSettings2()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCampaignLogins_3
     *
     * Логины, связанные с магазином.
     *
     */
    public function testGetCampaignLogins3()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCampaignOffers_1
     *
     * Информация о товарах, которые размещены в заданном магазине.
     *
     */
    public function testGetCampaignOffers1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCampaignQuarantineOffers_1
     *
     * Список товаров, находящихся в карантине по цене в магазине.
     *
     */
    public function testGetCampaignQuarantineOffers1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCampaignRegion_1
     *
     * Регион магазина.
     *
     */
    public function testGetCampaignRegion1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCampaignSettings_3
     *
     * Настройки магазина.
     *
     */
    public function testGetCampaignSettings3()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCampaign_3
     *
     * Информация о магазине.
     *
     */
    public function testGetCampaign3()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCampaignsByLogin_3
     *
     * Магазины, доступные логину.
     *
     */
    public function testGetCampaignsByLogin3()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCampaigns_3
     *
     * Список магазинов пользователя.
     *
     */
    public function testGetCampaigns3()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCategoriesMaxSaleQuantum_0
     *
     * Лимит на установку кванта продажи и минимального количества товаров в заказе.
     *
     */
    public function testGetCategoriesMaxSaleQuantum0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCategoriesTree_0
     *
     * Дерево категорий.
     *
     */
    public function testGetCategoriesTree0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCategoryContentParameters_1
     *
     * Списки характеристик товаров по категориям.
     *
     */
    public function testGetCategoryContentParameters1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getChatHistory_2
     *
     * Получение истории сообщений в чате.
     *
     */
    public function testGetChatHistory2()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getChats_2
     *
     * Получение доступных чатов.
     *
     */
    public function testGetChats2()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getFeedIndexLogs_3
     *
     * Отчет по индексации прайс-листа.
     *
     */
    public function testGetFeedIndexLogs3()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getFeed_3
     *
     * Информация о прайс-листе.
     *
     */
    public function testGetFeed3()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getFeedbackAndCommentUpdates_1
     *
     * Новые и обновленные отзывы о магазине.
     *
     */
    public function testGetFeedbackAndCommentUpdates1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getFeeds_3
     *
     * Список прайс-листов магазина.
     *
     */
    public function testGetFeeds3()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getFulfillmentWarehouses_0
     *
     * Идентификаторы складов Маркета (FBY).
     *
     */
    public function testGetFulfillmentWarehouses0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGoodsFeedbackComments_0
     *
     * Получение комментариев к отзыву.
     *
     */
    public function testGetGoodsFeedbackComments0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGoodsFeedbacks_0
     *
     * Получение отзывов о товарах продавца.
     *
     */
    public function testGetGoodsFeedbacks0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGoodsStats_0
     *
     * Отчет по товарам.
     *
     */
    public function testGetGoodsStats0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getHiddenOffers_0
     *
     * Информация о скрытых вами товарах.
     *
     */
    public function testGetHiddenOffers0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOfferCardsContentStatus_1
     *
     * Получение информации о заполненности карточек магазина.
     *
     */
    public function testGetOfferCardsContentStatus1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOfferMappingEntries_0
     *
     * Список товаров в каталоге.
     *
     */
    public function testGetOfferMappingEntries0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOfferMappings_1
     *
     * Информация о товарах в каталоге.
     *
     */
    public function testGetOfferMappings1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOfferRecommendations_1
     *
     * Рекомендации Маркета, касающиеся цен.
     *
     */
    public function testGetOfferRecommendations1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOffers_3
     *
     * Предложения магазина.
     *
     */
    public function testGetOffers3()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrderBusinessBuyerInfo_1
     *
     * Информация о покупателе — юридическом лице.
     *
     */
    public function testGetOrderBusinessBuyerInfo1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrderBusinessDocumentsInfo_1
     *
     * Информация о документах.
     *
     */
    public function testGetOrderBusinessDocumentsInfo1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrder_0
     *
     * Информация об одном заказе.
     *
     */
    public function testGetOrder0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrdersStats_0
     *
     * Детальная информация по заказам.
     *
     */
    public function testGetOrdersStats0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrders_2
     *
     * Информация о нескольких заказах.
     *
     */
    public function testGetOrders2()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPricesByOfferIds_0
     *
     * Просмотр цен на указанные товары в магазине.
     *
     */
    public function testGetPricesByOfferIds0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPrices_0
     *
     * Список цен.
     *
     */
    public function testGetPrices0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPromoOffers_0
     *
     * Получение списка товаров, которые участвуют или могут участвовать в акции.
     *
     */
    public function testGetPromoOffers0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPromos_0
     *
     * Получение списка акций.
     *
     */
    public function testGetPromos0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getQualityRatings_0
     *
     * Индекс качества магазинов.
     *
     */
    public function testGetQualityRatings0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getReportInfo_0
     *
     * Получение заданного отчета.
     *
     */
    public function testGetReportInfo0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getReturnPhoto_3
     *
     * Получение фотографии возврата.
     *
     */
    public function testGetReturnPhoto3()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getReturn_3
     *
     * Информация о невыкупе или возврате.
     *
     */
    public function testGetReturn3()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getReturns_3
     *
     * Список невыкупов и возвратов.
     *
     */
    public function testGetReturns3()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getStocks_0
     *
     * Информация об остатках и оборачиваемости.
     *
     */
    public function testGetStocks0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSuggestedOfferMappingEntries_0
     *
     * Рекомендованные карточки для товаров.
     *
     */
    public function testGetSuggestedOfferMappingEntries0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSuggestedOfferMappings_1
     *
     * Просмотр карточек на Маркете, которые подходят вашим товарам.
     *
     */
    public function testGetSuggestedOfferMappings1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSuggestedPrices_0
     *
     * Цены для продвижения товаров.
     *
     */
    public function testGetSuggestedPrices0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putBidsForBusiness_2
     *
     * Включение буста продаж и установка ставок.
     *
     */
    public function testPutBidsForBusiness2()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putBidsForCampaign_3
     *
     * Включение буста продаж и установка ставок для магазина.
     *
     */
    public function testPutBidsForCampaign3()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for refreshFeed_3
     *
     * Сообщить, что прайс-лист обновился.
     *
     */
    public function testRefreshFeed3()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for searchRegionChildren_0
     *
     * Информация о дочерних регионах.
     *
     */
    public function testSearchRegionChildren0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for searchRegionsById_0
     *
     * Информация о регионе.
     *
     */
    public function testSearchRegionsById0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for searchRegionsByName_0
     *
     * Поиск регионов по их имени.
     *
     */
    public function testSearchRegionsByName0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sendFileToChat_2
     *
     * Отправка файла в чат.
     *
     */
    public function testSendFileToChat2()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sendMessageToChat_2
     *
     * Отправка сообщения в чат.
     *
     */
    public function testSendMessageToChat2()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setFeedParams_3
     *
     * Изменение параметров прайс-листа.
     *
     */
    public function testSetFeedParams3()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for skipGoodsFeedbacksReaction_0
     *
     * Отказ от ответа на отзывы.
     *
     */
    public function testSkipGoodsFeedbacksReaction0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateBusinessPrices_0
     *
     * Установка цен на товары во всех магазинах.
     *
     */
    public function testUpdateBusinessPrices0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCampaignOffers_1
     *
     * Изменение условий продажи товаров в магазине.
     *
     */
    public function testUpdateCampaignOffers1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateGoodsFeedbackComment_0
     *
     * Добавление нового или изменение созданного комментария.
     *
     */
    public function testUpdateGoodsFeedbackComment0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOfferContent_1
     *
     * Редактирование категорийных характеристик товара.
     *
     */
    public function testUpdateOfferContent1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOfferMappingEntries_0
     *
     * Добавление и редактирование товаров в каталоге.
     *
     */
    public function testUpdateOfferMappingEntries0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOfferMappings_1
     *
     * Добавление товаров в каталог и изменение информации о них.
     *
     */
    public function testUpdateOfferMappings1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updatePrices_0
     *
     * Установка цен на товары в конкретном магазине.
     *
     */
    public function testUpdatePrices0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updatePromoOffers_0
     *
     * Добавление товаров в акцию или изменение их цен.
     *
     */
    public function testUpdatePromoOffers0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
